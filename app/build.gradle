/*
 * MythtvPlayerForAndroid. An application for Android users to play MythTV Recordings and Videos
 * Copyright (c) 2016. Daniel Frey
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {

    def globalConfiguration = rootProject.extensions.getByName( "ext" )
    def applicationBranch = "git rev-parse --abbrev-ref HEAD".execute().text.trim()
    def applicationSHA1 = "git rev-parse --short HEAD".execute().text.trim()
    def applicationTag = "git describe --abbrev=0 --dirty --tags".execute().text.trim()
/*
    Version Code Algorithm
    ----------------------
    Version Code = Min API Level + Min Screen Size + Max Screen Size + App Version

    example: 1414210


    Android Version Table
    ---------------------
    API Level | Version Number | Code Name
    ------------------------------------------------------------------------------------------------
    14 - 15   | 4.0 - 4.0.4    | Ice Cream Sandwich
    16 - 18   | 4.1 - 4.3.1    | Jellybean
    19 - 20   | 4.4 - 4.4.4    | KitKat
    21 - 22   | 5.0 - 5.1.1    | Lollipop
    23        | 6.0 - 6.0.1    | Marshmellow
    24?       | 7.0?           | N?

    Android Screen Size Table
    --------------------------
    Code | Size
    ------------------------------------------------------------------------------------------------
    1    | low
    2    | normal
    3    | large
    4    | xlarge

 */

    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    enforceUniquePackageName = false

    dexOptions {

        maxProcessCount 2
        javaMaxHeapSize "4g"

    }

    defaultConfig {

        minSdkVersion 17
        targetSdkVersion 23

        applicationId 'org.mythtv.android'
        versionCode 1714210
        versionName "2.1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testApplicationId 'org.mythtv.android.app.test'

        resValue "string", "branchName", applicationBranch
        resValue "string", "shaName", applicationSHA1
        resValue "string", "tagName", applicationTag
        resValue "string", "versionName", "2.1.0"

    }

    buildTypes {

        debug {

            signingConfig signingConfigs.debug
            proguardFiles 'proguard-rules.txt'
            testCoverageEnabled = false

        }

        release {

            minifyEnabled true // Enables code shrinking for the release build type.
            proguardFiles getDefaultProguardFile( 'proguard-android.txt' ), 'proguard-rules.pro'

        }

    }

    productFlavors {

        // Define separate dev and prod product flavors.
        dev {

            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
            // to pre-dex each module and produce an APK that can be tested on
            // Android Lollipop without time consuming dex merging processes.
            minSdkVersion 21

        }

        prod {

            minSdkVersion 17

        }

    }

    compileOptions {

        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7

    }

    if( project.hasProperty( "mythtvplayer.signing" )
            && new File( project.property( "mythtvplayer.signing" ) + ".gradle" ).exists() ) {

        apply from: project.property( "mythtvplayer.signing" ) + ".gradle";

    }

    packagingOptions {

        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'

    }

    lintOptions {

        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'

        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.

    }

    signingConfigs {

        debug {

            storeFile file( '../buildsystem/debug.keystore' )
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'

        }

    }

}

dependencies {

    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies

//    compile project( ':presentation' )
    compile project( ':domain' )
    compile project( ':data' )

    apt presentationDependencies.daggerCompiler
    compile presentationDependencies.dagger
    compile presentationDependencies.butterKnife
    compile presentationDependencies.appCompat
    compile presentationDependencies.design
    compile presentationDependencies.cardView
    compile presentationDependencies.recyclerView
    compile presentationDependencies.palette
    compile presentationDependencies.rxJava
    compile presentationDependencies.rxAndroid
    compile presentationDependencies.picasso
    compile presentationDependencies.picassoOkHttpDownloader
    compile presentationDependencies.androidAnnotations
    compile presentationDependencies.preferences
    compile presentationDependencies.glide
    compile presentationDependencies.recyclerviewfastscroller

    compile presentationDependencies.leanback
    compile presentationDependencies.leanbackPreferences

    debugCompile presentationDependencies.leakCanaryNoOp
    releaseCompile presentationDependencies.leakCanaryNoOp

    provided presentationDependencies.javaxAnnotation

    androidTestCompile presentationTestDependencies.androidAnnotations
    androidTestCompile presentationTestDependencies.mockito
    androidTestCompile presentationTestDependencies.dexmaker
    androidTestCompile presentationTestDependencies.dexmakerMockito
    androidTestCompile presentationTestDependencies.testSupportRunner
    androidTestCompile presentationTestDependencies.testSupportRules
    androidTestCompile presentationTestDependencies.espresso
    androidTestCompile presentationTestDependencies.robolectric
    testCompile presentationDependencies.leakCanaryNoOp

}

apply from: '../buildsystem/jacoco.gradle'
