/*
 * MythTV Player An application for Android users to play MythTV Recordings and Videos
 * Copyright (c) 2015. Daniel Frey
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply from: 'buildsystem/ci.gradle'
apply from: 'buildsystem/dependencies.gradle'

buildscript {

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0-alpha1'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.7'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0x'
    }
}

allprojects {

    ext {
        androidApplicationId = 'org.mythtv.android'
        androidVersionCode = 17
        androidVersionName = "1.1.14"
        testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"
        testApplicationId = 'org.mythtv.android.test'
    }

    repositories {
        jcenter()
    }

}

task wrapper( type: Wrapper ) {
  description 'Creates the gradle wrapper.'
  gradleVersion '2.11'
}

task runDomainUnitTests(dependsOn: [':domain:test']) {
  description 'Run unit tests for both domain and data layers.'
}

task runDataUnitTests(dependsOn: [':data:cleanTestDebugUnitTest', ':data:testDebugUnitTest']) {
  description 'Run unit tests for both domain and data layers.'
}

task runUnitTests(dependsOn: ['runDomainUnitTests', 'runDataUnitTests']) {
  description 'Run unit tests for both domain and data layers.'
}

task runAcceptanceTests(dependsOn: [':presentation:connectedAndroidTest']) {
  description 'Run application acceptance tests.'
}
