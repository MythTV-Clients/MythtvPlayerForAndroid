apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

jacoco {
    toolVersion "0.7.6.201602180812"
}

//noinspection GroovyUnusedAssignment
sourceCompatibility = 1.7
//noinspection GroovyUnusedAssignment
targetCompatibility = 1.7

configurations {
    provided
}

sourceSets {
  main {
    compileClasspath += configurations.provided
  }
}

dependencies {

    def domainDependencies = rootProject.ext.domainDependencies
    def domainTestDependencies = rootProject.ext.domainTestDependencies

    provided domainDependencies.daggerCompiler
    provided domainDependencies.javaxAnnotation
    compile domainDependencies.lombok

    compile domainDependencies.dagger
    compile domainDependencies.rxJava
    compile domainDependencies.joda

    testCompile domainTestDependencies.junit
    testCompile domainTestDependencies.mockito

    compile 'org.jacoco:org.jacoco.agent:0.7.6.201602180812'

}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."

    reports {
        xml.enabled true
        csv.enabled false
        xml.destination "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        html.destination "${buildDir}/reports/coverage"
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(
                    dir: it,
                    exclude: [
                            '**/Artwork.class',
                            '**/ArtworkInfo*.class',
                            '**/Cast.class',
                            '**/CastMember.class',
                            '**/ChannelInfo.class',
                            '**/ContentType.class',
                            '**/Encoder.class',
                            '**/Input.class',
                            '**/LiveStreamInfo.class',
                            '**/Program.class',
                            '**/RecordingInfo.class',
                            '**/SearchResult.class',
                            '**/SearchResult$Type.class',
                            '**/SettingsKeys.class',
                            '**/TitleInfo.class',
                            '**/VideoMetadataInfo.class',
                            '**/*_Factory.class',
                    ])
        })
    }

    doLast {
        println "coveralls report has been generated to file://${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        println "jacoco report has been generated to file://${reports.html.destination}/index.html"
    }

}

check.dependsOn jacocoTestReport