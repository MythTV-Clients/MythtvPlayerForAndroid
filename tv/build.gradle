apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {

    def globalConfiguration = rootProject.extensions.getByName( "ext" )
    def applicationSHA1 = "git rev-parse --short HEAD".execute().text.trim()
    def applicationTag = "git describe --abbrev=0 --dirty --tags".execute().text.trim()

    compileSdkVersion globalConfiguration.getAt( "androidCompileSdkVersion" )
    buildToolsVersion globalConfiguration.getAt( "androidBuildToolsVersion" )
    enforceUniquePackageName = false

    defaultConfig {

        minSdkVersion globalConfiguration.getAt( "androidTvMinSdkVersion" )
        targetSdkVersion globalConfiguration.getAt( "androidTargetSdkVersion" )

        applicationId 'org.mythtv.android'
        versionCode globalConfiguration.getAt( "androidVersionCode" )
        versionName globalConfiguration.getAt( "androidVersionName" )
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testApplicationId 'org.mythtv.android.tv.test'

        resValue "string", "versionName", globalConfiguration.getAt( "androidVersionName" )

        buildConfigField "String", "APPLICATION_SHA1", '"' + applicationSHA1 + '"'
        buildConfigField "String", "APPLICATION_TAG", '"' + applicationTag + '"'
    }

    compileOptions {

        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7

    }

    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            proguardFiles 'proguard-rules.txt'
            testCoverageEnabled = false
        }

        release {
            proguardFiles 'proguard-rules.txt'
            testCoverageEnabled = false
        }

    }

    if( project.hasProperty( "mythtvplayer.signing" )
            && new File( project.property( "mythtvplayer.signing" ) + ".gradle" ).exists() ) {
        apply from: project.property( "mythtvplayer.signing" ) + ".gradle";
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

    signingConfigs {

        debug {
            storeFile file( '../buildsystem/debug.keystore' )
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

    }

}

dependencies {

    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies

    compile project( ':presentation' )
    compile project( ':domain' )
    compile project( ':data' )

    apt presentationDependencies.daggerCompiler
    compile presentationDependencies.dagger
    compile presentationDependencies.butterKnife
    compile presentationDependencies.appCompat
    compile presentationDependencies.design
    compile presentationDependencies.cardView
    compile presentationDependencies.recyclerView
    compile presentationDependencies.palette
    compile presentationDependencies.rxJava
    compile presentationDependencies.rxAndroid
    compile presentationDependencies.picasso
    compile presentationDependencies.androidAnnotations
    compile presentationDependencies.preferences
    compile presentationDependencies.leanback
    compile presentationDependencies.leanbackPreferences
    compile presentationDependencies.glide
    provided presentationDependencies.javaxAnnotation

    androidTestCompile presentationTestDependencies.androidAnnotations
    androidTestCompile presentationTestDependencies.mockito
    androidTestCompile presentationTestDependencies.dexmaker
    androidTestCompile presentationTestDependencies.dexmakerMockito
    androidTestCompile presentationTestDependencies.testSupportRunner
    androidTestCompile presentationTestDependencies.testSupportRules
    androidTestCompile presentationTestDependencies.espresso
    androidTestCompile presentationTestDependencies.robolectric

}

//apply from: '../buildsystem/jacoco.gradle'
