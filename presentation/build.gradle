apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'

android {

    def globalConfiguration = rootProject.extensions.getByName( "ext" )

    compileSdkVersion globalConfiguration.getAt( "androidCompileSdkVersion" )
    buildToolsVersion globalConfiguration.getAt( "androidBuildToolsVersion" )

    defaultConfig {

        minSdkVersion globalConfiguration.getAt( "androidMinSdkVersion" )
        targetSdkVersion globalConfiguration.getAt( "androidTargetSdkVersion" )

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testApplicationId 'org.mythtv.android.presentation.test'

    }

    compileOptions {

        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7

    }

    buildTypes {

        debug {
            testCoverageEnabled = false
        }

    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

}

dependencies {

    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies

    compile project(':domain')
    compile project(':data')

    apt presentationDependencies.daggerCompiler
    compile presentationDependencies.dagger
//    compile presentationDependencies.butterKnife
    compile presentationDependencies.appCompat
    compile presentationDependencies.design
//    compile presentationDependencies.cardView
//    compile presentationDependencies.recyclerView
//    compile presentationDependencies.palette
    compile presentationDependencies.rxJava
    compile presentationDependencies.rxAndroid
    compile presentationDependencies.picasso
    compile presentationDependencies.androidAnnotations
    compile presentationDependencies.preferences
//    compile presentationDependencies.glide
//    compile presentationDependencies.multidex
//    compile presentationDependencies.recyclerviewfastscroller
    provided presentationDependencies.javaxAnnotation

    androidTestCompile presentationTestDependencies.androidAnnotations
    androidTestCompile presentationTestDependencies.mockito
    androidTestCompile presentationTestDependencies.dexmaker
    androidTestCompile presentationTestDependencies.dexmakerMockito
    androidTestCompile presentationTestDependencies.testSupportRunner
    androidTestCompile presentationTestDependencies.testSupportRules
    androidTestCompile presentationTestDependencies.espresso
    androidTestCompile presentationTestDependencies.robolectric

}

apply from: '../buildsystem/jacoco.gradle'
